/*Paso 0: Copiar la tabla vuelos a vuelos2*/
CREATE TABLE RAW.VUELOS2 AS
SELECT * 
FROM RAW.VUELOS
;

/* Paso 1: Quedarnos con operador de vuelo de WN */
CREATE TABLE RAW.NW AS
SELECT *
FROM RAW.VUELOS2 
WHERE OP_UNIQUE_CARRIER = 'WN'
;

/* Paso 2: Modificar nombres de columnas*/
CREATE TABLE RAW.NW2 AS
SELECT YEAR, MONTH AS MES, DAY_OF_MONTH AS DIA_MES, DAY_OF_WEEK AS DIA_SEMANA,
OP_UNIQUE_CARRIER AS ID_OPERADOR, TAIL_NUM AS ID_AVION, OP_CARRIER_FL_NUM AS NUM_VUELO,
ORIGIN AS ORIGEN, DEST AS DESTINO, CRS_DEP_TIME AS HORASALIDAF, DEP_TIME AS SALIDA_REALF,
DEP_DELAY AS DELAY, CRS_ARR_TIME AS HORA_LLEGADA_PROGF, CRS_ELAPSED_TIME AS TIEMPO_TRANS_VUELO,
DISTANCE AS DISTANCIA_MILLAS
FROM RAW.NW
;

/*Paso 3: Modificar a numerico algunas columnas para poder operarlas*/
ALTER TABLE RAW.NW2
ALTER COLUMN DELAY TYPE NUMERIC USING delay::numeric
/*ALTER COLUMN column_name_2 [SET DATA] TYPE new_data_type, AQUÍ SE PUEDEN PONER MÁS VARIABLES*/
;

/*Paso 4: Generar bandera Delay*/
CREATE TABLE RAW.NW3 AS
SELECT * ,
CASE WHEN DELAY <= 0  THEN 'A:SIN RETRASO'
      WHEN DELAY > 0 AND DELAY <= 10 THEN 'B:RETRASO_MENOR10'
	  WHEN DELAY > 10 AND DELAY <= 20 THEN 'C:RETRASO_MENOR20'
	  WHEN DELAY > 20 AND DELAY <= 30 THEN 'C:RETRASO_MENOR30'
	  WHEN DELAY > 30 AND DELAY <= 40 THEN 'C:RETRASO_MENOR40'
	  WHEN DELAY > 40 AND DELAY <= 50 THEN 'C:RETRASO_MENOR50'
	  WHEN DELAY > 50 AND DELAY <= 60 THEN 'C:RETRASO_MENOR60'
      ELSE 'H:RETRASO_MAYOR60'
END AS BANDERA_DELAY
FROM RAW.NW2
;

/*Paso 5: Crear la fecha de vuelo*/
CREATE TABLE RAW.NW4 AS
SELECT * ,
CASE WHEN DIA_MES = '1' OR DIA_MES = '2' OR DIA_MES = '3' OR DIA_MES = '4' OR DIA_MES = '5' 
	OR DIA_MES = '6' OR DIA_MES = '7' OR DIA_MES = '8' OR DIA_MES = '9' THEN CONCAT('0',DIA_MES) 
	ELSE DIA_MES END AS DAY,
CASE WHEN MES = '1' OR MES = '2' OR MES = '3' OR MES = '4' OR MES = '5' OR MES = '6'
	OR MES = '7' OR MES = '8' OR MES = '9' THEN CONCAT('0',MES) ELSE MES END AS MONTH,
CASE WHEN DIA_SEMANA = '1' THEN 'A:LUNES' 
	WHEN DIA_SEMANA = '2' THEN 'B:MARTES'
	WHEN DIA_SEMANA = '3' THEN 'C:MIERCOLES'
	WHEN DIA_SEMANA = '4' THEN 'D:JUEVES'
	WHEN DIA_SEMANA = '5' THEN 'E:VIERNES'
	WHEN DIA_SEMANA = '6' THEN 'F:SABADO'
	WHEN DIA_SEMANA = '7' THEN 'G:DOMINGO'
	ELSE DIA_SEMANA END AS DAY_SEM
FROM RAW.NW3
;

/*Paso 6: Continuacion - Crear la fecha de vuelo*/
CREATE TABLE RAW.NW5 AS
SELECT * , CONCAT(DAY,MONTH,YEAR) AS FECHA_VUELO
FROM RAW.NW4
;

/*Paso 7: Continuacion - Crear la fecha de vuelo*/
CREATE TABLE RAW.NW6 AS
SELECT *, to_date(FECHA_VUELO, 'ddmmyyyy') AS FECHA
FROM RAW.NW5
;

/*Paso 8: Un poco de limpieza de Variables*/
CREATE TABLE RAW.NW7 AS
SELECT FECHA, DAY_SEM, ID_OPERADOR, ID_AVION, NUM_VUELO, ORIGEN,
       DESTINO, HORASALIDAF, SALIDA_REALF, TIEMPO_TRANS_VUELO,
	   DISTANCIA_MILLAS, HORA_LLEGADA_PROGF, DELAY, BANDERA_DELAY
FROM RAW.NW6
WHERE ID_AVION IS NOT NULL AND SALIDA_REALF IS NOT NULL
;

/*Paso 9: Ordenar esta tabla por Id_avion, Hora de salidaF y Fecha */
CREATE TABLE RAW.NW8 AS
SELECT *
FROM RAW.NW7
WHERE DELAY IS NOT NULL 
ORDER BY ID_AVION, FECHA, HORASALIDAF
;

/*Paso 10: Realizar el conteo de vuelos por Fecha y Id_vuelo*/
CREATE TABLE RAW.NW9 AS
SELECT *, 
	RANK() OVER (
			PARTITION BY ID_AVION, FECHA
			ORDER BY ID_AVION, FECHA, HORASALIDAF) rank_contador
FROM RAW.NW8
;

/*Paso 11: Tomar el maximo rank por Fecha y Id_Vuelo*/
CREATE TABLE RAW.MAX_NW AS
SELECT (MAX(rank_contador)) AS MAX,
       ID_AVION, FECHA
FROM RAW.NW9
GROUP BY ID_AVION, FECHA
ORDER BY ID_AVION, FECHA
;

/*Paso 12: Pegar la tabla de Maximos a la tabla del rank*/
CREATE TABLE RAW.NW10 AS
SELECT t1.*, t2.MAX
FROM RAW.NW9 t1
INNER JOIN RAW.MAX_NW t2
ON (t1.ID_AVION = t2.ID_AVION AND t1.FECHA = t2.FECHA)
ORDER BY t1.ID_AVION, t1.FECHA, t1.HORASALIDAF
;

/*Paso 13: Hacer la resta para obtener el numero de vuelos faltantes en el dia para el mismo avion*/
/*SELECT *, COALESCE(col1,0) + COALESCE(col2,0) AS NVUE_FALT Buen aprendizaje ese coalesce*/
CREATE TABLE RAW.NW11 AS
SELECT *, (max - rank_contador) AS NVUE_FALT
FROM RAW.NW10
;

/*Paso 14: Se empieza a generar el efecto domino*/
/*Generar bandera de los afectados*/
CREATE TABLE RAW.NW12 AS
SELECT *, CASE WHEN BANDERA_DELAY = 'A:SIN RETRASO' THEN 0 ELSE 1 END AS IND_RETRASO1
FROM RAW.NW11
;

/*Paso 15: Generar el Lag con el ind_retraso2*/
CREATE TABLE RAW.NW13 AS
SELECT *, 
	LAG(IND_RETRASO1 ,1) OVER (
		ORDER BY ID_AVION, FECHA, HORASALIDAF
	) IND_RETRASO2 
FROM RAW.NW12
;

/*Paso 16: Jugada para distraer a la maquina*/
CREATE TABLE RAW.NW14 AS
SELECT *, CASE WHEN rank_contador = 1 THEN null ELSE IND_RETRASO2 END AS IND_RETRASO3
FROM RAW.NW13
;

/*Paso 17: Crear el efecto domino igualando IND1 vs IND3*/
CREATE TABLE RAW.NW15 AS
SELECT *, CASE WHEN IND_RETRASO1 = IND_RETRASO3 AND IND_RETRASO1 = 1
THEN 'DOMINO' ELSE 'SIN EFECTO' END AS EFECTO
FROM RAW.NW14 t1
;



/*Aqui me quede-------------------------------------------------------------*/
/*Paso 18: Filtrar la tabla para quedarse con puros retrasos*/
/*Filtrar (la tabla queda de  2'454,328) donde Ind_Retraso1 = 1
(para quedarme con todos los vuelos retrasados).*/
CREATE TABLE RAW.NW16 AS
SELECT *
FROM RAW.NW15 
WHERE IND_RETRASO1 = 1
;

/*Paso 19: Generar el Lag con la bandera de efecto*/
CREATE TABLE RAW.NW17 AS 
SELECT *, 
	LAG(EFECTO ,1) OVER (
		ORDER BY ID_AVION, FECHA, HORASALIDAF
	) EFECTO2 
FROM RAW.NW16
;

/*Paso 20: Encontrar el vuelo que genera el efecto domino*/
CREATE TABLE RAW.NW18 AS
SELECT *, CASE WHEN EFECTO = 'DOMINO' AND EFECTO2 = 'SIN EFECTO'
THEN 1 ELSE 0 END AS EFECTOS_DOMINO
FROM RAW.NW17
;

/*Paso 21: SUMA_EFECTOS Se suma la variable EFECTOS_DOMINO y se agrupa por Id_avion y Fecha*/
CREATE TABLE RAW.NW19 AS
SELECT FECHA, ID_AVION, (SUM(EFECTOS_DOMINO)) AS SUM_EFECTOS_DOMINO
FROM RAW.NW18
GROUP BY FECHA, ID_AVION
;

/*Paso 22: Regreso a la tabla retrasos - Se debe regresar a la tabla de RAW.NW16  */
CREATE TABLE RAW.NW20 AS
SELECT t1.*, t2.SUM_EFECTOS_DOMINO
FROM RAW.NW16 t1
LEFT JOIN RAW.NW19 t2
ON (t1.FECHA = t2.FECHA AND t1.ID_AVION = t2.ID_AVION)
ORDER BY t1.ID_AVION, t1.FECHA, t1.HORASALIDAF
;

/*Paso 23: Eliminar cuando ocurren dobles o triples efectos domino*/
CREATE TABLE RAW.NW21 AS
SELECT *
FROM RAW.NW20 
WHERE SUM_EFECTOS_DOMINO <= 1
ORDER BY ID_AVION, FECHA, HORASALIDAF
;

/*Paso 24: Total efectos domino*/
CREATE TABLE RAW.NW22 AS
SELECT ID_AVION, FECHA, (SUM(SUM_EFECTOS_DOMINO)-1) AS TOT_SUM_DOMINO
FROM RAW.NW21
GROUP BY ID_AVION, FECHA
;

/*Paso 25: Regresar a la tabla NW23 pegando el total*/
CREATE TABLE RAW.NW23 AS
SELECT t1.*, t2.TOT_SUM_DOMINO
FROM RAW.NW21 t1
LEFT JOIN RAW.NW22 t2
ON (t1.FECHA = t2.FECHA AND t1.ID_AVION = t2.ID_AVION)
;

/*Paso 26: Modificar los negativos*/
CREATE TABLE RAW.NW24 AS
SELECT *,
CASE WHEN TOT_SUM_DOMINO < 0 THEN 0 ELSE TOT_SUM_DOMINO END AS TOT_SUM_DOMINO2
FROM RAW.NW23
;


/*Paso 27: Count_inverso1*/
CREATE TABLE RAW.NW25 AS
SELECT *, 
	-1+RANK() OVER (
			PARTITION BY ID_AVION, FECHA
			ORDER BY ID_AVION, FECHA, HORASALIDAF) rank_contador2
FROM RAW.NW24
;

/*Paso 28: Count_inverso2 */
CREATE TABLE RAW.NW26 AS
SELECT *, TOT_SUM_DOMINO2 - RANK_CONTADOR2 AS COUNT2
FROM RAW.NW25
;

/*Paso 29: Modificar negativos 2*/
CREATE TABLE RAW.NW27 AS
SELECT *,
CASE WHEN COUNT2 < 0 THEN 0 ELSE COUNT2 END AS COUNT3
FROM RAW.NW26
;

/*Paso 30: Regresar a la tabla original de todo los vuelos de NW*/
CREATE TABLE RAW.NW28 AS
SELECT t1.*, t2.SUM_EFECTOS_DOMINO, t2.TOT_SUM_DOMINO, t2.COUNT3 AS VUELOS_AFECTADOS
FROM RAW.NW15 t1
LEFT JOIN RAW.NW27 t2
ON (t1.FECHA = t2.FECHA AND t1.ID_AVION = t2.ID_AVION AND t1.RANK_CONTADOR = t2.RANK_CONTADOR)
ORDER BY ID_AVION, FECHA, HORASALIDAF;
;

/*Paso 31: Generacion de etiquetas y Limpieza*/
CREATE TABLE RAW.NWFINAL AS
SELECT FECHA, DAY_SEM, ID_OPERADOR, ID_AVION, NUM_VUELO, ORIGEN, DESTINO, HORASALIDAF, SALIDA_REALF,
TIEMPO_TRANS_VUELO, DISTANCIA_MILLAS, HORA_LLEGADA_PROGF, DELAY, BANDERA_DELAY, RANK_CONTADOR AS COUNT,
MAX, NVUE_FALT, IND_RETRASO1, IND_RETRASO2, IND_RETRASO3, EFECTO, SUM_EFECTOS_DOMINO, TOT_SUM_DOMINO,
VUELOS_AFECTADOS, EXTRACT(YEAR FROM FECHA) AS YEAR,
CASE WHEN DELAY >= 20 AND VUELOS_AFECTADOS >= 2 THEN 1 ELSE 0 END AS ETIQUETA1
FROM RAW.NW28
;







